version: "3.4"

services:

  ### SEVICE/PHP
  php:
    build:
      context: .
      target: symfony_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        SKELETON: ${SKELETON:-symfony/skeleton}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    links:
      - mailcatcher
    depends_on:
      - mysql
    environment:
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      #DATABASE_URL: postgresql://${POSTGRES_USER:-symfony}:${POSTGRES_PASSWORD:-ChangeMe}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-13}
      #DATABASE_URL: mysql://symfony-demo:symfony-demo@mysql:3306/symfony-demo?serverVersion=5.7&charset=utf8mb4
      DATABASE_URL: mysql://symfony-demo:symfony-demo@mysql:3306/symfony-demo
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    networks:
      - symfony

  ### SERVICE/APP
  caddy:
    build:
      context: .
      target: symfony_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
    networks:
      - symfony

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

  ### SERVICE/MYSQL
  mysql:
    image: 'mysql:latest'
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'password0'
      MYSQL_USER: 'symfony-demo'
      MYSQL_DATABASE: 'symfony-demo'
      MYSQL_PASSWORD: 'symfony-demo'
    ports:
      - '3306'
    volumes:
      - db_data_mysql:/var/lib/mysql
    networks:
      - symfony
  ### SERVICE/PHPMYADMIN
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: 'password0'
      PMA_USER: 'symfony-demo'
      PMA_PASSWORD: 'symfony-demo'
    networks:
      - symfony

### SERVICE/doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

### VOLUMES
volumes:
  php_socket:
  caddy_data:
  caddy_config:
  db_data_mysql:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###

### NETWORKS
networks:
  symfony:
